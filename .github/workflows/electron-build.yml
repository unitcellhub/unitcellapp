name: Electron

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  workflow_dispatch:
  # schedule:
  #   - cron: '20 21 * * *'
  push:
    branches: [ "main", "develop" ]
    # Publish semver tags as releases.
    tags: [ 'v*' ]
  pull_request:
    branches: [ "main" ]
  release:
    types: [published]

env:
  ASSET_FILNAME: ${{ github.ref_name }} 

jobs:
  build:

    runs-on: windows-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # This repository uses git-lfs, so we need to enable support.
          # Otherwise, the lfs files won't be properly pulled.
          lfs: true

      - name: Pull from git lfs
        run: git lfs pull

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "0.4.27"
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"

      - name: Install the project from lock file 
        run: uv sync --frozen --dev --all-extras

      - name: Build pyinstaller executable
        run: uv run --no-sync pyinstaller --noconfirm pyinstaller.spec

      - name: Set Node.js 
        uses: actions/setup-node@v3
        with:
          node-version: 20.x

      - name: Install electron environment from lock file
        run: yarn install --frozen-lockfile
        working-directory: .\electron

      - name: Build electron executable
        run: yarn run dist 
        working-directory: .\electron

      - name: Glob match executable filename
        uses: tj-actions/glob@v22
        id: glob
        with:
          files: "UnitcellApp Setup*.exe"
          working-directory: ./electron/dist
          match-directories: false
          match-gitignore-files: true
          files-separator: ' '

      - name: Show all matching files
        run: |
          echo "${{ steps.glob.outputs.paths }}"

      - name: Get release details
        if: github.event_name == 'release'
        id: get_release
        uses: bruceadams/get-release@v1.3.2
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Upload release asset
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }} 
          asset_path: .\electron\dist\
          asset_name: ${{ steps.glob.output.paths }} 
          asset_content_type: application/exe




